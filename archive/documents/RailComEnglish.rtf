{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 XXXXXX--12--345678--XXXXXX\
Each byte --> 6-bits plus Ack, Nak, Busy\
1\
1+2 --> DCC Long address\
3+4 --> 12-bits and Ack, Nak, and busy.\
5..8 --> <=36-bits\
\
12+6\
12+12\
12+12+6\
12+12+12\
12+12+12+12\
12+18\
12+18+12\
12+18+18\
12+24\
12+36\
\
==>\
ID+DATA\
4+8\
4+14\
4+20\
4+32\
|\
+--->\
\
\
Preceding DCC Address is interpreted as:\
1-127     Mobile decoder, DCC short\
128-191 DCC stationary decoder\
192-231 Mobile decoder with long address, byte2 has low address part\
253 ?\
255 ?? system address\
\
Mobile Decoders: \
ID Data\
0   POM\
1   app:low\
2   app:high\
3   nil, app:ext\
7   nil, app:dun\
12 nil, subID\
\
Stationary Decoders:\
ID  Data\
?   app:srq\
0   nil, app:POM\
4   nil, start\
5   nil, time\
6   nil, error\
7  nil, app:dun\
8    nil, app:stat2\
12  nil, subID\
\
CV28\
 0: 1=channel 1 approved for address broadcasts\
 1: 1=Channel 2 approved for data and Ack\
 4: 0=programming 253 address blocked, 1=Programming address 253 ok\
CV29\
 3: 1=RailCOm\
CV31,32\
\
}