<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="schema2xhtml.xsl" type="text/xsl"?>

<!-- XML Schema for OpenLCB Configuration Description Information (CDI)     -->

<xs:schema xmlns:xs  ="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi ="http://www.w3.org/2001/XMLSchema-instance"
           >

   <xs:complexType name="mapType">
       <xs:annotation>
         <xs:documentation>
           A map relates one or more property elements (keys) to specific values.
         </xs:documentation>
       </xs:annotation>
       <xs:sequence>
              <xs:element name="name" minOccurs="0" maxOccurs="1"/>
              <xs:element name="description" minOccurs="0" maxOccurs="1"/>
              <xs:element name="relation" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="property" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="value" minOccurs="1" maxOccurs="1"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
       </xs:sequence>
    </xs:complexType>

   <xs:complexType name="groupType">
            <xs:sequence>
              <xs:element name="name" minOccurs="0" maxOccurs="1"/>
              <xs:element name="description" minOccurs="0" maxOccurs="1"/>
              <xs:element name="repname" minOccurs="0" maxOccurs="1"/>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      Allows any sequence of the contained element types
                    </xs:documentation>
                  </xs:annotation>
                  <xs:element name="group" type="groupType" minOccurs="0" maxOccurs="1"/>
                  <xs:element name="bit" type="bitType" minOccurs="0" maxOccurs="1"/>
                  <xs:element name="string" type="stringType" minOccurs="0" maxOccurs="1"/>
                  <xs:element name="int" type="intType" minOccurs="0" maxOccurs="1"/>
                  <xs:element name="eventid" type="eventidType" minOccurs="0" maxOccurs="1"/>
              </xs:choice>
            </xs:sequence>
            <xs:attribute name="origin" type="xs:long">
              <xs:annotation>
                <xs:documentation>
                      Starting address of the element's contents within the memory space.
                      If present, this overrides the sequential layout of element contents in memory.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="offset" type="xs:long" default="0">
              <xs:annotation>
                <xs:documentation>
                      Positive or negative offset between the address of the end of previous element and the start of this elements's contents.
                      If an origin attribute is present, the offset is added to the origin before finding the start of the element's contents.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="replication" type="xs:int"  default="1"/>
    </xs:complexType>

   <xs:complexType name="eventidType">
            <xs:sequence>
              <xs:element name="name" minOccurs="0" maxOccurs="1"/>
              <xs:element name="description" minOccurs="0" maxOccurs="1"/>
              <xs:element name="map" type="mapType" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="origin" type="xs:long">
              <xs:annotation>
                <xs:documentation>
                      Starting address of the element's contents within the memory space.
                      If present, this overrides the sequential layout of element contents in memory.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="offset" type="xs:long" default="0">
              <xs:annotation>
                <xs:documentation>
                      Positive or negative offset between the address of the end of previous element and the start of this elements's contents.
                      If an origin attribute is present, the offset is added to the origin before finding the start of the element's contents.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
    </xs:complexType>

   <xs:complexType name="intType">
            <xs:sequence>
              <xs:element name="name" minOccurs="0" maxOccurs="1"/>
              <xs:element name="description" minOccurs="0" maxOccurs="1"/>
              <xs:element name="min" minOccurs="0" maxOccurs="1"/>
              <xs:element name="max" minOccurs="0" maxOccurs="1"/>
              <xs:element name="default" minOccurs="0" maxOccurs="1"/>
              <xs:element name="map" type="mapType" minOccurs="0" maxOccurs="1">
                  <xs:annotation>
                    <xs:documentation>
                          The 'value' of each entry is displayed, and the 'property' content (number) is sent to/from the node
                    </xs:documentation>
                  </xs:annotation>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="size" type="xs:int" default="1">
              <xs:annotation>
                <xs:documentation>
                      Storage size of this variable in bytes.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="origin" type="xs:long">
              <xs:annotation>
                <xs:documentation>
                      Starting address of the element's contents within the memory space.
                      If present, this overrides the sequential layout of element contents in memory.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="offset" type="xs:long" default="0">
              <xs:annotation>
                <xs:documentation>
                      Positive or negative offset between the address of the end of previous element and the start of this elements's contents.
                      If an origin attribute is present, the offset is added to the origin before finding the start of the element's contents.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
    </xs:complexType>

   <xs:complexType name="bitType">
            <xs:sequence>
              <xs:element name="name" minOccurs="0" maxOccurs="1"/>
              <xs:element name="description" minOccurs="0" maxOccurs="1"/>
              <xs:element name="map" type="mapType" minOccurs="0" maxOccurs="1">
                  <xs:annotation>
                    <xs:documentation>
                          The 'value' of each entry is displayed, and the 'property' content (number) is sent to/from the node
                    </xs:documentation>
                  </xs:annotation>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="size" type="xs:int" default="1">
              <xs:annotation>
                <xs:documentation>
                      Storage size of this variable in bits.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="mask" type="xs:int">
              <xs:annotation>
                <xs:documentation>
                      If present, a numerical mask to be applied to extract the 
                      value from the referenced memory location. Must contain
                      'size' consecutive 1 bits.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="origin" type="xs:long">
              <xs:annotation>
                <xs:documentation>
                      Starting address of the element's contents within the memory space.
                      If present, this overrides the sequential layout of element contents in memory.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="offset" type="xs:long" default="0">
              <xs:annotation>
                <xs:documentation>
                      Positive or negative offset between the address of the end of previous element and the start of this elements's contents.
                      If an origin attribute is present, the offset is added to the origin before finding the start of the element's contents.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
    </xs:complexType>

   <xs:complexType name="stringType">
            <xs:sequence>
              <xs:element name="name" minOccurs="0" maxOccurs="1"/>
              <xs:element name="description" minOccurs="0" maxOccurs="1"/>
              <xs:element name="map" type="mapType" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="size" type="xs:int" use="required">
              <xs:annotation>
                <xs:documentation>
                      Storage size of this variable in bytes. 
                      This includes the trailing null byte that terminates the string content.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="origin" type="xs:long">
              <xs:annotation>
                <xs:documentation>
                      Starting address of the element's contents within the memory space.
                      If present, this overrides the sequential layout of element contents in memory.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="offset" type="xs:long" default="0">
              <xs:annotation>
                <xs:documentation>
                      Positive or negative offset between the address of the end of previous element and the start of this elements's contents.
                      If an origin attribute is present, the offset is added to the origin before finding the start of the element's contents.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
    </xs:complexType>

    <xs:element name="cdi">
      <xs:annotation>
        <xs:documentation>
          This is the schema for Configuration Description Information (cdi)
        </xs:documentation>
      </xs:annotation>
      <xs:complexType>
        <xs:sequence>

          <xs:element name="identification" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Common first element to identify the decoder
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="manufacturer" minOccurs="0" maxOccurs="1"/>
                <xs:element name="model" minOccurs="0" maxOccurs="1"/>
                <xs:element name="hardwareVersion" minOccurs="0" maxOccurs="1"/>
                <xs:element name="softwareVersion" minOccurs="0" maxOccurs="1"/>
                <xs:element name="map" type="mapType" minOccurs="0" maxOccurs="1">
                  <xs:annotation>
                    <xs:documentation>
                       This map can be used to add arbitrary key/value descriptions of the node.
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>

          <xs:element name="acdi" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>
                Element that identifies that memory information is available as defined by
                the Abbreviated Common Description Information (ACDI) standard.
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:attribute name="fixed" type="xs:int" default="1">
                  <xs:annotation>
                    <xs:documentation>
                      The decimal version number of the format for the fixed definition information; "1"
                    </xs:documentation>
                  </xs:annotation>
              </xs:attribute>
              <xs:attribute name="var" type="xs:int" default="1">
                  <xs:annotation>
                    <xs:documentation>
                      The decimal version number of the format for the variable definition information; "1"
                    </xs:documentation>
                  </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>

          <xs:element name="segment" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>
                Define the contents of a memory space. Name is a required first element.
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="name" minOccurs="1" maxOccurs="1"/>
                <xs:element name="description" minOccurs="0" maxOccurs="1"/>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      Allows any sequence of the contained element types
                    </xs:documentation>
                  </xs:annotation>
                  <xs:element name="group" type="groupType" minOccurs="0" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>
                              Allows grouping and replication of multiple locations.
                        </xs:documentation>
                      </xs:annotation>
                  </xs:element>
                  <xs:element name="bit" type="bitType" minOccurs="0" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>
                              Describes a bit field in the data.
                              The field can be considered either a number, or a set of specific coded values via a map.
                        </xs:documentation>
                      </xs:annotation>
                  </xs:element>
                  <xs:element name="string" type="stringType" minOccurs="0" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>
                              Describes a human-readable UTF-8 string in the data.
                        </xs:documentation>
                      </xs:annotation>
                  </xs:element>
                  <xs:element name="int" type="intType" minOccurs="0" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>
                              Describes an integer value in the data.
                              The field can be considered either a number, or a set of specific coded values via a map.
                        </xs:documentation>
                      </xs:annotation>
                  </xs:element>
                  <xs:element name="eventid" type="eventidType" minOccurs="0" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>
                              Describes an 8-byte Event ID in the data.
                        </xs:documentation>
                      </xs:annotation>
                  </xs:element>
                </xs:choice>
              </xs:sequence>
              <xs:attribute name="space" type="xs:int" use="required">
                  <xs:annotation>
                    <xs:documentation>
                      The decimal number of the address space where the information is found.
                    </xs:documentation>
                  </xs:annotation>
              </xs:attribute>
              <xs:attribute name="origin" type="xs:long" default="0">
                  <xs:annotation>
                    <xs:documentation>
                      Starting address of the segment's contents within the memory space.
                    </xs:documentation>
                  </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>

        </xs:sequence>
      </xs:complexType>
    </xs:element>
</xs:schema>
